#!/bin/sh
#===============================================================================
#
#  suspend
#
#  Copyright (C) 2009-2021 by Digi International Inc.
#  All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License version 2 as published by
#  the Free Software Foundation.
#
#
#  !Description: suspend system to RAM
#
#===============================================================================

scriptname="$(basename ${0})"
syspower="/sys/power/state"

usage() {
	printf "\nSuspend system to RAM memory\n"
	printf "\nUsage: ${scriptname} [OPTIONS]\n
	-h      Show this help
	\n"
}

suspend_interfaces() {
	if grep -qs '^wlan0' /var/run/ifstate; then
		ifdown wlan0 && up_wlan_on_resume="1" && sleep 0.5
	fi
	[ -e /sys/module/ath6kl_sdio ] && rmmod ath6kl_sdio && WLAN_DRIVER="ath"
	[ -e /sys/module/wlan ] && rmmod wlan && WLAN_DRIVER="qcom"
}

resume_interfaces() {
	if ! grep -qs '^wlan0' /var/run/ifstate; then
		[ "${WLAN_DRIVER}" = "ath" ] && modprobe ath6kl_sdio && sleep 0.5
		if [ "${WLAN_DRIVER}" = "qcom" ]; then
			# Trigger wireless module loading event, and wait until the interface exists
			udevadm trigger --action=add --attr-match="modalias=sdio:c00v0271d050A"
			timeout -t 5 sh -c "while [ ! -d /sys/class/net/wlan0 ]; do sleep .2; done" 2>/dev/null
		fi
		[ -n "${up_wlan_on_resume}" ] && ifup wlan0
	fi
}

while getopts "h" c; do
	case "${c}" in
		h) usage; exit;;
	esac
done

if [ -f "${syspower}" ]; then
	# Pre-suspend actions
	suspend_interfaces

	# Suspend the device
	printf "mem" > ${syspower}
	sleep .5

	# Post-resume actions
	resume_interfaces
else
	printf "\n[ERROR] File ${syspower} not found\n\n"
fi
