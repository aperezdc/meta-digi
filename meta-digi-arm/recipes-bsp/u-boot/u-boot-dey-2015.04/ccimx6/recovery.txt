#
# U-Boot bootscript for EMMC/SD images created by Yocto.
#

#
# Set device tree filename depending on the board ID (if defined)
#
if test -n "${board_id}"; then
	setenv fdt_file uImage-${soc_family}-ccimx6sbc-id${board_id}.dtb
else
	#
	# Set device tree filename depending on the hardware variant
	#
	if test "${module_variant}" = "0x02"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x03"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x04"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x05"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-w.dtb
	elif test "${module_variant}" = "0x06"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x08"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc.dtb
	elif test "${module_variant}" = "0x0a"; then
		setenv fdt_file uImage-imx6dl-ccimx6sbc-w.dtb
	elif test "${module_variant}" = "0x0b"; then
		setenv fdt_file uImage-imx6dl-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x0c"; then
		setenv fdt_file uImage-imx6dl-ccimx6sbc.dtb
	elif test "${module_variant}" = "0x0e"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc.dtb
	elif test "${module_variant}" = "0x0f"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc.dtb
	elif test "${module_variant}" = "0x11"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x12"; then
		setenv fdt_file uImage-imx6q-ccimx6sbc-wb.dtb
	elif test "${module_variant}" = "0x13"; then
		setenv fdt_file uImage-imx6dl-ccimx6sbc-wb.dtb
	else
		echo "------ Using default fdt_file"
		#
		# Default fdt_file in recent v2015.04 U-Boots has a "zImage"
		# prefix, build the default fdt_file by hand using "uImage" and
		# the soc_family variable.
		#
		setenv fdt_file uImage-${soc_family}-ccimx6sbc.dtb
	fi
fi

# The latest versions of Digi U-Boot v2015.04 default to using the "zimage"
# kernel image type, but the ccimx6sbc uses "uimage". Hardcode this in the
# bootscript to ensure the target boots correctly.
setenv dboot_kernel_var uimage

setenv boot_initrd true
setenv initrd_file uramdisk-recovery.img
dboot linux mmc ${mmcbootdev}:${mmcpart}
